// FONT FACE
@mixin font-face($font-name, $path, $weight: normal, $style: normal, $font-display: swap) {
	@font-face {
		font-family: quote($font-name);
		src: url(../fonts/#{$path}.woff2) format('woff2'),
		url(../fonts/#{$path}.woff) format('woff');
		font-weight: $weight;
		font-style: $style;
		font-display: $font-display;
	}
}

// MATH PERCENT
@function mp($val1, $val2) {
	@return math.percentage(math.div($val1, $val2));
}

// FON SIZE IN REM
@function fsz($val1, $val2) {
	@return math.div($val1, $val2)+rem;
}

// CLEARFIX
@mixin clearfix {

	&:before,
	&:after {
		content: '';
		display: table;
	}

	&:after {
		clear: both;
	}
}

// PLACEHOLDER
@mixin placeholder {
	&::-webkit-input-placeholder {
		@content;

		&:focus {
			color: transparent;
		}
	}

	&:-moz-placeholder {
		@content;

		&:focus {
			color: transparent;
		}
	}

	&::-moz-placeholder {
		@content;

		&:focus {
			color: transparent;
		}
	}

	&:-ms-input-placeholder {
		@content;

		&:focus {
			color: transparent;
		}
	}
}

// TABLE LIST
@mixin tl {
	display: table;
	width: 100%;
	font-size: 0;
	table-layout: fixed;
}

// IMG STYLES
@mixin imgSt() {
	height: 100%;
	min-width: 100%;
	object-fit: cover;
	// object-position: 0 0;
}

@mixin imgSt1() {
	height: 100%;
	min-width: 100%;
	object-fit: cover;
	object-position: 50% 0;
}

// SET RGBA COLOR
@function percent-to-number($val) {
	@return $val / 100;
}

@function set-opacity($color) {
	$lightness: lightness($color);
	$lightness-number: percent-to-number($lightness);
	$trans-value: transparentize($color, $lightness-number);
	@return $trans-value;
}

// HORIZONTAL JUSTIFY
@mixin ha() {
	text-align: justify;
	line-height: 0;
	font-size: 1px;

	&:after {
		content: '';
		width: 100%;
		height: 0px;
		visibility: hidden;
		overflow: hidden;
		display: inline-block;
	}
}

// VERTICAL JUSTIFY
@mixin va() {
	&:after {
		content: '';
		display: inline-block;
		vertical-align: middle;
		height: 100%;
		width: 0;
	}
}

// TRANSITION
@mixin trs($tRs: all) {
	transition: all 0.3s ease-in-out;
}
